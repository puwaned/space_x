// Mocks generated by Mockito 5.4.0 from annotations
// in spacex/test/blocs/launch_pad_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:spacex/model/launch_pad_model.dart' as _i3;
import 'package:spacex/repo/launch_pad_repo.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLaunchPadModel_1 extends _i1.SmartFake
    implements _i3.LaunchPadModel {
  _FakeLaunchPadModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LaunchPadRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLaunchPadRepository extends _i1.Mock
    implements _i4.LaunchPadRepository {
  MockLaunchPadRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);
  @override
  set dio(_i2.Dio? _dio) => super.noSuchMethod(
        Invocation.setter(
          #dio,
          _dio,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<_i3.LaunchPadModel> getOne(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getOne,
          [id],
        ),
        returnValue: _i5.Future<_i3.LaunchPadModel>.value(_FakeLaunchPadModel_1(
          this,
          Invocation.method(
            #getOne,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.LaunchPadModel>);
}
